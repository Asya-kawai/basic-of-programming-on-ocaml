% -*- coding:utf-8 -*-
@import: settings

let preface = '<
  +p{
    % プログラマが学ぶべき97のこと 関数型プログラミングの重要性
    % https://xn--97-273ae6a4irb6e2hsoiozc2g4b8082p.com/%E3%82%A8%E3%83%83%E3%82%BB%E3%82%A4/%E9%96%A2%E6%95%B0%E5%9E%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%92%E5%AD%A6%E3%81%B6%E3%81%93%E3%81%A8%E3%81%AE%E9%87%8D%E8%A6%81%E6%80%A7/
    昨今の関数型言語や関数型プログラミングへの関心の高まりを受け、
    いくつかのプログラミング言語ではそのエッセンスが取り入れられています。
    その結果、型、カリー化、部分適用、参照透過性といった概念・用語は自然に利用されるまでに普及しました。
  }
  +p{
    しかし、それらの用語が自然に用いられるほど、初学者にとって理解のハードルが上がってしまいます。
    また、同じ用語であってもプログラミング言語によって意味が異なる場合があります。
    その場合、正しい意味やその言語における概念を調べるためにいくらかの時間を必要とします。
    これも初学者を苦しめる要因だと考えています。
  }
  +p{
    % プログラミングの基礎 まえがき
    そこで本書では、\dfn{OCaml}という関数型言語を用いて、これらのエッセンスとプログラミングの基本について学んでいきます。
    OCamlは簡単で扱いやすく、大規模なプログラムを作成する上で重要な抽象度の高いプログラミングが可能です。
    「OCamlというプログラミング言語なんて聞いたことがない」「実用的な言語か？」と疑問に思われる読者もいるかもしれません。
    % プログラマが学ぶべき97のこと 関数型プログラミングの重要性
    重要なのはOCamlという言語を学ぶことはではなく、関数型プログラミングのパラダイムを学び、
    プログラミングという行為にうまく応用することです。
    関数型言語であるOCamlでこれらの概念を学ぶことで、プログラミングの基本を身につけるとともに、
    他のプログラミング言語に取り入れられたエッセンスを理解する助けになると信じています。
  }
  +p{
    本書は多くの方にご協力頂き執筆することができました。
    出展のサポートを頂いたさくらインターネットの皆さま、
    OCamlの詳細な仕様等に関する質問にお答えして頂いたOCaml-jp.slack.comの皆さま、
    本書のレビューをして頂いた\@zehnpaard様、
    Twitter等のSNSで温かい言葉や見守って頂いた皆さま、
    その他ご協力頂いた全ての方々に感謝申し上げます。
  }
>